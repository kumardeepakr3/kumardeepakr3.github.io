---
layout: post
title:  "Jekyll Revision"
date:   2018-02-04 12:30:37 +0530
categories: jekyll update liquid
---
<style>
    .highlight .err {
        color: #a61717;
        background-color: inherit;
    }
    code {
        color: #a61717;
    }
</style>

Most of the things that I'm writing here are notes that I've taken down from <a href="https://learn.cloudcannon.com/">Cloud Cannon</a>

### File Structure
#### _config.yml
This holds the configs for the entire site including the theme.
#### _drafts directory
This holds the posts that we're still editing and don't want them to be in production.
#### _includes directory
A piece of view code that can be inserted across all the pages. Eg: Header and Footer code can be added in this folder.
#### _layouts directory
This has templates for different content. For eg: you might have a structure to your posts- title, date, body. You can use these same templates across your posts.
#### _posts
All the posts written in .markdown goes in this folder.
#### _data directory
Data in .json, .yml, .csv formats can be put here and used in the pages.
#### _site directory
Everything generated by jekyll for static site goes in this folder. Never add anything in this folder. It'll always be erased by the jekyll build engine.
#### Others
Other files that don't have any frontmatter are directly copied to _site folder. Eg: you can have css directory containing all the stylesheets. This directory will be copied as-is to the _site directory.

<br>
<br>
### Front matter
Jekyll feature to add variables to page. It's written on top of the file as:
```
---
showPages: true
helloString: "Hello World"
cupcakes:
  - name: apple
    price: 200
    color: red
  - name: kiwi 
    price: 100
    color: grey 
---
```

These can be accesses on the page as follows (using liquid syntax):
{% raw %}
    {{ page.helloString }}
    {% for cupcake in page.cupcakes %}
        Name- {{ cupcake.name }} , Price- {{ cupcake.price }} , Color- {{ cupcake.color }}
    {% endfor %}
{% endraw %}

<br>
<br>
### Layouts
Say you have a post that has "hello" as the specified layout in its front matter:
```
---
layout: hello
---
This is body of post.
```
This essentially says - Use the content(body) of hello and replace {% raw %} {{ content }} {% endraw %} tag in hello template with content of this post.
One can also write layout in frontmatter of a layout file. This is a way of introducing layout inheritance.

<br>
<br>
### Includes
You can set common content (like header and footer) using includes. To include any portion you use following syntax:
{% raw %}
    {% include youtube.html youtube_id="ABCXYZ" %}
{% endraw %}

You can use the parameter youtube_id passed in the file youtube.html as:
{% raw %}
    {{ include.youtube_id }}
{% endraw %}

<br>
<br>

### Liquid Content
Following are few liquid syntax:

#### If-Else
{% raw %}
    {% if page.showHeading %}
        {{ page.heading }}
    {% elsif page.heading contains "cupcake" %}
        {{ page.cupcakeHeading }}
    {% else %}
        {{ page.noCupcakes }}
    {% endif %}
{% endraw %}


#### For Loop
{% raw %}
    {% for cupcake in page.cupcakes %}
        {{ cupcake }}
    {% endfor %}
{% endraw %}